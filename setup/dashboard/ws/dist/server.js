/*!
 * QuickBox-ws a0825790b2bb83a542e3 build at 2020-04-01T04:02:56.087Z (https://github.com/amefs/quickbox-lite)
 * Copyright 2020 TautCony
 * Licensed under GPL-3.0 (https://github.com/amefs/quickbox-lite/blob/master/LICENSE)
 */!function(e){var t={};function n(o){if(t[o])return t[o].exports;var r=t[o]={i:o,l:!1,exports:{}};return e[o].call(r.exports,r,r.exports,n),r.l=!0,r.exports}n.m=e,n.c=t,n.d=function(e,t,o){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:o})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var o=Object.create(null);if(n.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var r in e)n.d(o,r,function(t){return e[t]}.bind(null,r));return o},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=0)}([function(e,t,n){"use strict";var o=this&&this.__awaiter||function(e,t,n,o){return new(n||(n=Promise))((function(r,s){function c(e){try{u(o.next(e))}catch(e){s(e)}}function i(e){try{u(o.throw(e))}catch(e){s(e)}}function u(e){var t;e.done?r(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(c,i)}u((o=o.apply(e,t||[])).next())}))};Object.defineProperty(t,"__esModule",{value:!0});const r=n(1),s=n(2),c=n(3),i=n(4),u=n(5),a=n(6),l=s(),f=i.createServer(l),d=u(f),p=r.default.create({baseURL:"http://localhost",timeout:5e3,httpsAgent:new c.Agent({rejectUnauthorized:!1})}),h=(e,t)=>o(void 0,void 0,void 0,(function*(){const n={pathName:e,success:!0,message:"",response:""};try{const o=(e=>{let t;t=e.toLowerCase().startsWith("http")?new URL(e):new URL(e,"place://holder");const n=t.pathname,o={};return t.searchParams.forEach((e,t)=>{o[t]=e}),{pathName:n,args:o}})(e);n.response=(yield p.get(o.pathName,{params:o.args})).data}catch(e){n.message=e?e.toString():"Unknown error",n.success=!1}finally{t.send(n)}}));d.on("connection",e=>{console.log(e.id,"connect"),e.on("message",t=>{h(t,e)}),e.on("exec",t=>{((e,t)=>{o(void 0,void 0,void 0,(function*(){const n={cmd:e,success:!0,message:"",stdout:"",stderr:""};a.exec(e,(e,o,r)=>{n.stdout=o,n.stderr=r,e&&(n.success=!1,n.message=e.toString()),t.emit("exec",n)})}))})(t,e)}),e.on("disconnect",()=>{console.log(e.id,"disconnect")})}),f.listen(8575,"127.0.0.1",()=>{console.log("quickbox-ws running...")})},function(e,t){e.exports=require("axios")},function(e,t){e.exports=require("express")},function(e,t){e.exports=require("https")},function(e,t){e.exports=require("http")},function(e,t){e.exports=require("socket.io")},function(e,t){e.exports=require("child_process")}]);