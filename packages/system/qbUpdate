#!/bin/bash
#
# [QuickBox Lite box System Updater]
#
# GitHub:   https://github.com/amefs/quickbox-lite
# Author:   Amefs
# Current version:  v1.5.0
# URL:
# Original Repo:    https://github.com/QuickBox/QB
# Credits to:       QuickBox.io
#
#   Licensed under GNU General Public License v3.0 GPL-3 (in short)
#
#   You may copy, distribute and modify the software as long as you track
#   changes/dates in source files. Any modifications to our software
#   including (via compiler) GPL-licensed code must also be made available
#   under the GPL along with build & install instructions.
#
# shellcheck disable=SC1090,SC1091,SC2034,SC2129
#################################################################################
#################################################################################
# CORE VARIABLE
#################################################################################
CODENAME=$(lsb_release -cs)
DISTRO=$(lsb_release -is)

#################################################################################
# HELP FUNCTIONS
#################################################################################
_norm=$(tput sgr0)
_red=$(tput setaf 1)
_green=$(tput setaf 2)
_tan=$(tput setaf 3)
_cyan=$(tput setaf 6)
OUTTO=/srv/dashboard/db/output.log
if [[ $1 == "--only-core" ]]; then
	core=1
else
	core=0
fi

function _execute() {
	($1 >>"${OUTTO}" 2>&1)
}
function _print() {
	printf "${_norm}%s${_norm}\n" "$@"
	printf "%s\n" "$@" >>"${OUTTO}"
}
function _info() {
	printf "${_cyan}➜ %s${_norm}\n" "$@"
	printf ">> Info: %s\n" "$@" >>"${OUTTO}"
}
function _success() {
	printf "${_green}✓ %s${_norm}\n" "$@"
	printf ">> Success: %s\n" "$@" >>"${OUTTO}"
}
function _warning() {
	printf "${_tan}⚠ %s${_norm}\n" "$@"
	printf ">> Warning: %s\n" "$@" >>"${OUTTO}"
}
function _error() {
	printf "${_red}✗ %s${_norm}\n" "$@"
	printf ">> Error: %s\n" "$@" >>"${OUTTO}"
}
#################################################################################
# SCRIPT FUNCTIONS
#################################################################################
function _lockCheck() {
	if [[ -f "/install/.install.lock" ]]; then
		prevApp=$(cat /install/.install.lock)
		_info "$prevApp update is running."
		_info "If you believe this to be in error, please manually remove the /install/.install.lock"
		_error "Exiting..."
		exit 1
	fi
}
function _setLock() {
	echo "QuickBox" >/install/.install.lock
}
function _lockCleanup() {
	rm -f /install/.install.lock
	_success "QuickBox update finished!"
}

function _installSystemUpdates() {
	_info "Checking and performing updates to system... "
	_execute "dpkg --configure -a"
	DEBIAN_FRONTEND=noninteractive apt-get -yqq -o Dpkg::Options::="--force-confdef" -o Dpkg::Options::="--force-confold" update >>"${OUTTO}" 2>&1
	DEBIAN_FRONTEND=noninteractive apt-get -yqq -o Dpkg::Options::="--force-confdef" -o Dpkg::Options::="--force-confold" upgrade >>"${OUTTO}" 2>&1
	## auto solve lock
	if [ "$?" -eq 2 ]; then
		_warning "dpkg database is locked."
		_info "fixing dpkg lock..."
		rm -f /var/lib/dpkg/updates/0*
		locks=$(find /var/lib/dpkg/lock* && find /var/cache/apt/archives/lock*)
		if [[ ${locks} == $(find /var/lib/dpkg/lock* && find /var/cache/apt/archives/lock*) ]]; then
			for l in ${locks}; do
				rm -rf "${l}"
			done
			_execute "dpkg --configure -a"
			DEBIAN_FRONTEND=noninteractive apt-get -yqq -o Dpkg::Options::="--force-confdef" -o Dpkg::Options::="--force-confold" update >>"${OUTTO}" 2>&1
			DEBIAN_FRONTEND=noninteractive apt-get -yqq -o Dpkg::Options::="--force-confdef" -o Dpkg::Options::="--force-confold" upgrade >>"${OUTTO}" 2>&1
		fi
		if ! (apt-get check >/dev/null); then
			apt-get install -f >>"${OUTTO}" 2>&1
			if ! (apt-get check >/dev/null); then
				whiptail --title "$ERROR_TITLE_INSTALL" --msgbox "$ERROR_TEXT_INSTALL_1" --ok-button "$BUTTON_OK" 8 72
				exit 1
			fi
		fi
	fi
	_success "System updated."
}

function _preloadScript() {
	source /usr/local/bin/quickbox/system/update/qbUpdateRepo
	if [[ "$CODENAME" =~ ("xenial"|"stretch") ]]; then
		if [[ ! -f /install/.legacy.lock ]]; then
			touch /install/.legacy.lock
		fi
		if [[ -f /install/.developer.lock  ]]; then
			rm -f /install/.developer.lock
		fi
	fi
}

function _reloadScript() {
	source /usr/local/bin/quickbox/system/update/qbUpdateRepo
	source /usr/local/bin/quickbox/system/update/qbUpdateService
	source /usr/local/bin/quickbox/system/update/qbUpdateDashboard
}

function _fin() {
	source ~/.profile
	source ~/.bashrc
	_lockCleanup
	echo >>"${OUTTO}" 2>&1
	echo "[QuickBox] Seedbox & GUI Update Completed ! " >>"${OUTTO}" 2>&1
	echo >>"${OUTTO}" 2>&1
	echo >>"${OUTTO}" 2>&1
	echo "Close this dialog box to refresh your browser" >>"${OUTTO}" 2>&1
	# schedule restart service
	at now + 1 minute >>"${OUTTO}" 2>&1 <<EOF
sleep 5;\
/usr/local/bin/quickbox/system/auxiliary/php-fpm-cli -r 'opcache_reset();';\
systemctl restart php7.4-fpm
nginx -s reload
EOF
}

# initialization environment
local_prefix=/etc/QuickBox/
local_setup_template=${local_prefix}setup/templates/
local_setup_dashboard=${local_prefix}setup/dashboard/

#################################################################################
# MAIN PROCESS
#################################################################################
_lockCheck
_setLock
if [[ $core == 0 ]]; then
	_installSystemUpdates
fi
_preloadScript
_updateRepo
_setPerm
_bashrc
_updateskel
_reloadScript
_updateservice
_updatedashboard
_updatelanguage
_startservice
_fin
