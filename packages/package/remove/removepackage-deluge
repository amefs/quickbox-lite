#!/bin/bash
#
# [QuickBox Lite Deluge Remover]
#
# GitHub:   https://github.com/amefs/quickbox-lite
# Author:   Amefs
# Current version:  v1.5.0
# URL:
# Original Repo:    https://github.com/QuickBox/QB
# Credits to:       QuickBox.io
#
#   Licensed under GNU General Public License v3.0 GPL-3 (in short)
#
#   You may copy, distribute and modify the software as long as you track
#   changes/dates in source files. Any modifications to our software
#   including (via compiler) GPL-licensed code must also be made available
#   under the GPL along with build & install instructions.
#
#################################################################################
################################################################################
# HELP FUNCTIONS
################################################################################
export NEWT_COLORS='
root=,black
window=,lightgray
shadow=,color8
title=color8,
checkbox=,magenta
entry=,color8
label=blue,
actlistbox=,magenta
actsellistbox=,magenta
helpline=,magenta
roottext=,magenta
emptyscale=magenta
disabledentry=magenta,
'

_norm=$(tput sgr0)
_red=$(tput setaf 1)
_green=$(tput setaf 2)
_tan=$(tput setaf 3)
_cyan=$(tput setaf 6)

function _execute() {
	($1 >>"${OUTTO}" 2>&1)
}
function _print() {
	printf "${_norm}%s${_norm}\n" "$@"
	printf "%s\n" "$@" >>"${OUTTO}"
}
function _info() {
	printf "${_cyan}➜ %s${_norm}\n" "$@"
	printf ">> Info: %s\n" "$@" >>"${OUTTO}"
}
function _success() {
	printf "${_green}✓ %s${_norm}\n" "$@"
	printf ">> Success: %s\n" "$@" >>"${OUTTO}"
}
function _warning() {
	printf "${_tan}⚠ %s${_norm}\n" "$@"
	printf ">> Warning: %s\n" "$@" >>"${OUTTO}"
}
function _error() {
	printf "${_red}✗ %s${_norm}\n" "$@"
	printf ">> Error: %s\n" "$@" >>"${OUTTO}"
}

#################################################################################
# APP VARIABLE
#################################################################################
APP_TITLE="Deluge"
APP_NAME="deluge"
APP_BASEDEPS="deluge-console deluge-gtk deluge-web deluged deluge-common"

APP_LOCK=.$APP_NAME.lock
OUTTO=/srv/dashboard/db/output.log

################################################################################
# SCRIPT FUNCTIONS
################################################################################
function _usage() {
	echo -e "\nQuickBox Lite $APP_TITLE Remover"
	echo -e "\nUsage: \n$(basename "$0") [-h] [-l logfile]"
	echo -e "\nOptions:\n"
	echo "-l, --log <logfile>       specific log file"
	# not required by multi-user applications
	echo ""
	echo "-h, --help                display this help and exit"
}
################################################################################
# REMOVE FUNCTIONS
################################################################################
function _lockCheck() {
	if [[ -f "/install/.install.lock" ]]; then
		prevApp=$(cat /install/.install.lock)
		_info "$prevApp process running."
		_info "If you believe this to be in error, please manually remove the /install/.install.lock"
		_error "Exiting..."
		exit 1
	fi
	if [[ ! -f "/install/$APP_LOCK" ]]; then
		_error "${APP_TITLE} haven't installed ..."
		exit 1
	fi
}
function _setLock() {
	echo "${APP_TITLE}" >/install/.install.lock
}
function _lockCleanup() {
	rm -f /install/.install.lock
}

function _removeInfo() {
	_print "
$APP_TITLE will now be removed.

This process may take a few minutes
Please wait until the process is completed
"
}

function _removeService() {
	_info "Removing ${APP_TITLE} service..."
	userlist=$(cat $(find /root/.qbuser/ -type f) | cut -d: -f1)
	for username in $userlist; do
		_execute "systemctl disable deluge-web@${username}"
		_execute "systemctl stop deluge-web@${username}"
		_execute "systemctl disable deluged@${username}"
		_execute "systemctl stop deluged@${username}"
	done
	rm -rf /etc/systemd/system/deluge-web@.service >/dev/null 2>&1
	rm -rf /etc/systemd/system/deluged@.service >/dev/null 2>&1
	_execute "systemctl daemon-reload"
	_success "${APP_TITLE} service removed."
}

function _removeDepends() {
	_info "Removing ${APP_TITLE} dependencies..."
	local DEPLIST="${APP_BASEDEPS}"
	for depend in $DEPLIST; do
		_info "Removing ${depend}... "
		_execute "apt-get -y purge ${depend}"
		_execute "apt-get -y autoremove"
		_execute "apt-get -y autoclean"
	done
	if [[ -f /install/.libtorrent-rasterbar-python.lock ]]; then
		_execute "apt-get -y purge python-libtorrent"
		rm -f /install/.libtorrent-rasterbar-python.lock
	fi
	if [[ -f /install/.libtorrent-rasterbar-python3.lock ]]; then
		_execute "apt-get -y purge python3-libtorrent"
		rm -f /install/.libtorrent-rasterbar-python3.lock
	fi
	if [[ ! -f /install/.qbittorrent.lock ]]; then
		_execute "apt-get -y purge libtorrent-rasterbar*"
		_execute "apt-get -y autoremove"
		_execute "apt-get -y autoclean"
		rm -f /install/.libtorrent-rasterbar.lock
		rm -f /install/.libtorrent-rasterbar9.lock
		rm -f /install/.libtorrent-rasterbar10.lock
	fi
	_success "${APP_TITLE} dependencies removed."
}

function _removeApp() {
	_info "Removing ${APP_TITLE}..."
	userlist=$(cat $(find /root/.qbuser/ -type f) | cut -d: -f1)
	for username in $userlist; do
		if [[ -f /install/.${username}.flexget.lock ]]; then
			if [[ ! -f /install/.pyenv.lock ]]; then
				_execute 'python2 -m pip uninstall deluge-client -y'
				_execute 'python3 -m pip uninstall deluge-client -y'
			else
				sudo -u ${username} -H bash -c "/home/${username}/.local/flexget3/bin/pip uninstall deluge-client -y" >>"${OUTTO}" 2>&1
			fi
			DPORT=$(cat /install/${username}.deluged.port)
			sed -i "s/${DPORT}/DEPORT/g" /home/${username}/.config/flexget/config.yml
		fi
		if [[ -f /install/.${username}.autoremovetorrents.lock ]]; then
			sudo -u ${username} -H bash -c "/home/${username}/.local/autoremovetorrents/bin/pip uninstall deluge-client -y" >>"${OUTTO}" 2>&1
			DPORT=$(cat /install/${username}.deluged.port)
			sed -i "s/${DPORT}/DEPORT/g" /home/${username}/.config/autoremovetorrents/config.yml
		fi
		rm -rf /home/${username}/dwatch
		rm -rf /home/${username}/torrents/deluge
		rm -rf /home/${username}/.config/deluge
		rm -f /etc/nginx/apps/${username}.ddlindex.conf
		rm -f /etc/nginx/conf.d/${username}.deluge.conf
		rm -f /install/${username}.deluged.port
		rm -f /install/${username}.deluge-web.port
	done
	# remove package
	if [[ -f /install/.deluge.install.record ]]; then
		xargs -a /install/.deluge.install.record -I{} rm -rf a/{}
		rm -rf /install/.deluge.install.record
	fi
	find /usr/local/share -name "deluge*" | xargs rm -f
	_success "${APP_TITLE} removed."
}

function _removeAppLock() {
	_info "Removing ${APP_TITLE} lock..."
	rm -f /install/${APP_LOCK}
	_success "${APP_TITLE} lock removed."
}

#################################################################################
# OPT GENERATOR
#################################################################################
if ! ARGS=$(getopt -a -o hl: -l help,log: -- "$@")
then
    _usage
    exit 1
fi
eval set -- "${ARGS}"
while true; do
	case "$1" in
	-h | --help)
		_usage
		exit 1
		;;
	-l | --log)
		OUTTO="$2"
		shift
		;;
	--)
		shift
		break
		;;
	esac
	shift
done

#################################################################################
# MAIN PROCESS
#################################################################################
_lockCheck
_setLock
_removeInfo
_removeService
_removeDepends
_removeApp
_removeAppLock
_lockCleanup
